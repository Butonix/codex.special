{"version":3,"sources":["webpack:///codex-special.min.js","webpack:///webpack/bootstrap 2f4cac4f209c46ab008b","webpack:///./src/js/main.js","webpack:///./src/js/codex-special.js","webpack:///./src/js/dictionary.js","webpack:///./src/js/classes.js"],"names":["codexSpecial","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","fillSettings_","settings","param","initialSettings","getScriptLocation","scriptSrc","scriptDir","lastSlashPosition","scriptsList","document","getElementsByTagName","i","length","src","indexOf","JS_FILE_PART_OF_NAME_TO_GET_RELATIVE_PATH","lastIndexOf","substr","loadStyles_","pathToExtension","style","createElement","setAttribute","href","CSS_FILE_PATH","head","appendChild","makeUI_","texts","DICT","lang","toolbar","draw_","textSizeSwitcher","color","classes","colorSwitchers","circle","colorSwitcher","dataset","nodes","push","appendPanel_","blockId","blockHolder","getElementById","classList","add","state","included","body","excludeModificator","excluded","position","top","left","bottom","right","addListeners_","map","switcher","index","addEventListener","changeColor_","changeTextSize_","loadSettings_","window","localStorage","getItem","localStorageBadges","textSize","this","contains","enabled","dropColor_","disabled","remove","setItem","removeItem","textSizeIncreased","dropTextSize_","innerHTML","iconButton","elem","decreaseSize","increaseSize","textSise","_codexSpecial","prototype","init","element","newElement","newClass","block","type","prefix","textToggler","textButton","ru","en","blue","green","white"],"mappings":"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","file":"./codex-special.min.js","sourcesContent":["var codexSpecial =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Special contrast verison for websites\n\t *\n\t * @link https://github.com/codex-team/codex.special\n\t * @author Codex Team — ifmo.su\n\t *   Vitaly Guryn    https://github.com/talyguryn\n\t *   Savchenko Petr  https://github.com/neSpecc\n\t * @version 1.2.1\n\t */\n\t\n\t/** Styles */\n\t__webpack_require__(1);\n\t\n\t/** Script */\n\tmodule.exports = __webpack_require__(3);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 2 */,\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = (function () {\n\t\n\t    /**\n\t     * Multilanguage support\n\t     * @private\n\t     */\n\t    var DICT = __webpack_require__(4);\n\t\n\t    /**\n\t     * CSS classes config\n\t     * @private\n\t     */\n\t    var classes = __webpack_require__(5);\n\t\n\t    /**\n\t     * Texts from dictionary\n\t     * @private\n\t     */\n\t    var texts = null;\n\t\n\t    /**\n\t     * Static nodes\n\t     * @private\n\t     */\n\t    var nodes = {\n\t\n\t        toolbar          : null,\n\t        colorSwitchers   : [],\n\t        textSizeSwitcher : null,\n\t\n\t    };\n\t\n\t    /**\n\t     * Required stylesheets URL\n\t     * @private\n\t     */\n\t    var CSS_FILE_PATH = 'codex-special.min.css';\n\t    var JS_FILE_PART_OF_NAME_TO_GET_RELATIVE_PATH = 'codex-special.min.js';\n\t\n\t    /**\n\t     * Names for states saved in localStorage\n\t     * @private\n\t     */\n\t    var localStorageBadges = {\n\t\n\t        textSise : 'codex-special__text-size',\n\t        color    : 'codex-special__color',\n\t\n\t    };\n\t\n\t    /**\n\t     * Settings for codexSpecial block\n\t     *\n\t     * blockId — at the end of which block you want to place codexSpecial\n\t     * scriptLocation — path to codexSpecial styles file\n\t     * lang — language for the codexSpecial from DICT_\n\t     */\n\t    var initialSettings = {\n\t\n\t        blockId  : null,\n\t        lang     : 'ru',\n\t        position : 'top-right',\n\t\n\t    };\n\t\n\t    /**\n\t     * Public methods and properties\n\t     * @constructor\n\t     */\n\t    var _codexSpecial = function () {};\n\t\n\t    /**\n\t     * Public initialization method\n\t     * @param {Object} settings are\n\t     *       - blockId - if passed, toolbar will be appended to this block\n\t     *                   otherwise, it will be fixed in window\n\t     */\n\t    _codexSpecial.prototype.init = function (settings) {\n\t\n\t        /** 1. Save initial settings to the private property */\n\t        fillSettings_(settings);\n\t\n\t        /** 2. Make interface */\n\t        makeUI_();\n\t\n\t        /** 3. Add listeners */\n\t        addListeners_();\n\t\n\t        /** 4. Check localStorage for settings */\n\t        loadSettings_();\n\t\n\t    };\n\t\n\t\n\t    /**\n\t     * Fills initialSettings\n\t     * @private\n\t     */\n\t    function fillSettings_(settings) {\n\t\n\t        for (var param in settings) {\n\t\n\t            initialSettings[param] = settings[param];\n\t\n\t        }\n\t\n\t    }\n\t\n\t    /**\n\t     * Gets codex-special path\n\t     * @private\n\t     */\n\t    function getScriptLocation() {\n\t\n\t        var scriptsList = document.getElementsByTagName('script'),\n\t            scriptSrc,\n\t            scriptDir,\n\t            lastSlashPosition;\n\t\n\t        for (var i = 0; i < scriptsList.length; i++) {\n\t\n\t            scriptSrc = scriptsList[i].src;\n\t\n\t            if (scriptSrc.indexOf(JS_FILE_PART_OF_NAME_TO_GET_RELATIVE_PATH) != -1) {\n\t\n\t                lastSlashPosition = scriptSrc.lastIndexOf('/');\n\t\n\t                scriptDir = scriptSrc.substr(0, lastSlashPosition + 1);\n\t\n\t                return scriptDir;\n\t\n\t            }\n\t\n\t        }\n\t\n\t    }\n\t\n\t    /**\n\t     * Loads requiered stylesheet\n\t     * @private\n\t     */\n\t    function loadStyles_() {\n\t\n\t        var pathToExtension = getScriptLocation(),\n\t            style = document.createElement('LINK');\n\t\n\t        style.setAttribute('type', 'text/css');\n\t        style.setAttribute('rel', 'stylesheet');\n\t\n\t        style.href = pathToExtension + CSS_FILE_PATH;\n\t\n\t        document.head.appendChild(style);\n\t\n\t    };\n\t\n\t    /**\n\t     * Interface maker\n\t     * @private\n\t     */\n\t    function makeUI_() {\n\t\n\t        /** 0. Init dictionary */\n\t        texts = DICT[initialSettings.lang];\n\t\n\t        /** 1. Make Toolbar and Switchers */\n\t        var toolbar          = draw_.toolbar(),\n\t            textSizeSwitcher = draw_.textSizeSwitcher();\n\t\n\t        /** 2. Append text size switcher */\n\t        toolbar.appendChild(textSizeSwitcher);\n\t\n\t        /** 3. Append color switchers */\n\t        for (var color in classes.colorSwitchers) {\n\t\n\t            var circle = draw_.colorSwitcher(color);\n\t\n\t            circle.dataset.style = color;\n\t\n\t            toolbar.appendChild(circle);\n\t\n\t            nodes.colorSwitchers.push(circle);\n\t\n\t        }\n\t\n\t        nodes.toolbar = toolbar;\n\t        nodes.textSizeSwitcher = textSizeSwitcher;\n\t\n\t        appendPanel_();\n\t\n\t    }\n\t\n\t    /**\n\t     * Toolbar positioning method\n\t     * @private\n\t     */\n\t    function appendPanel_() {\n\t\n\t        if (initialSettings.blockId) {\n\t\n\t            var blockHolder = document.getElementById(initialSettings.blockId);\n\t\n\t            if (blockHolder) {\n\t\n\t                blockHolder.appendChild(nodes.toolbar);\n\t\n\t                nodes.toolbar.classList.add(classes.toolbar.state.included);\n\t\n\t                return;\n\t\n\t            }\n\t\n\t            initialSettings.blockId = '';\n\t\n\t        }\n\t\n\t        document.body.classList.add(classes.body.excludeModificator);\n\t        nodes.toolbar.classList.add(classes.toolbar.state.excluded);\n\t\n\t        if (initialSettings.position) {\n\t\n\t            switch (initialSettings.position) {\n\t\n\t                case 'top-left':\n\t                    nodes.toolbar.classList.add(\n\t                        classes.toolbar.position.top,\n\t                        classes.toolbar.position.left\n\t                    ); break;\n\t\n\t                case 'bottom-right':\n\t                    nodes.toolbar.classList.add(\n\t                        classes.toolbar.position.bottom,\n\t                        classes.toolbar.position.right\n\t                    ); break;\n\t\n\t                case 'bottom-left':\n\t                    nodes.toolbar.classList.add(\n\t                        classes.toolbar.position.bottom,\n\t                        classes.toolbar.position.left\n\t                    ); break;\n\t\n\t                // 'top-right'\n\t                default:\n\t                    nodes.toolbar.classList.add(\n\t                        classes.toolbar.position.top,\n\t                        classes.toolbar.position.right\n\t                    ); break;\n\t\n\t            }\n\t\n\t        }\n\t\n\t        document.body.appendChild(nodes.toolbar);\n\t\n\t    }\n\t\n\t    /**\n\t     * Add click listeners to text and circles\n\t     * @private\n\t     */\n\t    function addListeners_() {\n\t\n\t        nodes.colorSwitchers.map(function (switcher, index) {\n\t\n\t            switcher.addEventListener('click', changeColor_, false);\n\t\n\t        });\n\t\n\t        nodes.textSizeSwitcher.addEventListener('click', changeTextSize_, false);\n\t\n\t    }\n\t\n\t    /**\n\t     * Get special setting params from localStorage and enable it\n\t     * @private\n\t     */\n\t    function loadSettings_() {\n\t\n\t        var color    = window.localStorage.getItem(localStorageBadges.color),\n\t            textSize = window.localStorage.getItem(localStorageBadges.textSize),\n\t            textSizeSwitcher;\n\t\n\t        if (color) {\n\t\n\t            nodes.colorSwitchers.map(function (switcher, index) {\n\t\n\t                if (switcher.dataset.style == color) {\n\t\n\t                    changeColor_.call(switcher);\n\t\n\t                }\n\t\n\t            });\n\t\n\t        }\n\t\n\t        if (textSize) {\n\t\n\t            textSizeSwitcher = nodes.textSizeSwitcher;\n\t\n\t            changeTextSize_.call(textSizeSwitcher);\n\t\n\t        }\n\t\n\t    }\n\t\n\t    /**\n\t     * Set special color scheme\n\t     * @private\n\t     */\n\t    function changeColor_() {\n\t\n\t        if (this.classList.contains(classes.circle.state.enabled)) {\n\t\n\t            return dropColor_();\n\t\n\t        }\n\t\n\t        dropColor_();\n\t\n\t        nodes.colorSwitchers.map(function (switcher, index) {\n\t\n\t            switcher.classList.add(classes.circle.state.disabled);\n\t\n\t        });\n\t\n\t        this.classList.remove(classes.circle.state.disabled);\n\t\n\t        this.classList.add(classes.circle.state.enabled);\n\t\n\t        window.localStorage.setItem(localStorageBadges.color, this.dataset.style);\n\t\n\t        document.body.classList.add(classes.colorSwitchers[this.dataset.style]);\n\t\n\t    }\n\t\n\t    /**\n\t     * Drop special color scheme\n\t     * @private\n\t     */\n\t    function dropColor_() {\n\t\n\t        for (var color in classes.colorSwitchers) {\n\t\n\t            document.body.classList.remove(classes.colorSwitchers[color]);\n\t\n\t        }\n\t\n\t        nodes.colorSwitchers.map(function (switcher, index) {\n\t\n\t            switcher.classList.remove(classes.circle.state.disabled, classes.circle.state.enabled);\n\t\n\t        });\n\t\n\t        window.localStorage.removeItem(localStorageBadges.color);\n\t\n\t    }\n\t\n\t    /**\n\t     * Set increased text size\n\t     * @private\n\t     */\n\t    function changeTextSize_() {\n\t\n\t        if (document.body.classList.contains(classes.textSizeIncreased)) {\n\t\n\t            return dropTextSize_();\n\t\n\t        }\n\t\n\t        dropTextSize_();\n\t\n\t        nodes.textSizeSwitcher.innerHTML = '<i class=\"' + classes.iconButton.elem + '\"></i> ' + texts.decreaseSize;\n\t\n\t        window.localStorage.setItem(localStorageBadges.textSize, 'big');\n\t\n\t        document.body.classList.add(classes.textSizeIncreased);\n\t\n\t    }\n\t\n\t    /**\n\t     * Drop increased text size\n\t     * @private\n\t     */\n\t    function dropTextSize_() {\n\t\n\t        document.body.classList.remove(classes.textSizeIncreased);\n\t\n\t        nodes.textSizeSwitcher.innerHTML = '<i class=\"' + classes.iconButton.elem + '\"></i> ' + texts.increaseSize;\n\t\n\t        window.localStorage.removeItem(localStorageBadges.textSize);\n\t\n\t    }\n\t\n\t    /**\n\t     * HTML elements maker\n\t     * @private\n\t     */\n\t    var draw_ = {\n\t\n\t        element : function (newElement, newClass) {\n\t\n\t            var block = document.createElement(newElement);\n\t\n\t            block.classList.add(newClass);\n\t\n\t            return block;\n\t\n\t        },\n\t\n\t        /**\n\t         * Codex special toolbar\n\t         */\n\t        toolbar : function () {\n\t\n\t            return draw_.element('DIV', classes.toolbar.elem);\n\t\n\t        },\n\t\n\t        /**\n\t         * Makes color switcher\n\t         * @param {string} type  - color string identifier\n\t         */\n\t        colorSwitcher : function (type) {\n\t\n\t            var colorSwitcher = draw_.element('SPAN', classes.circle.elem);\n\t\n\t            colorSwitcher.classList.add(classes.circle.prefix + type);\n\t\n\t            return colorSwitcher;\n\t\n\t        },\n\t\n\t        /**\n\t         * Makes text size toggler\n\t         */\n\t        textSizeSwitcher : function () {\n\t\n\t            var textToggler = draw_.element('SPAN', classes.textButton.elem);\n\t\n\t            textToggler.innerHTML = '<i class=\"' + classes.iconButton.elem + '\"></i> ' + texts.increaseSize;\n\t\n\t            return textToggler;\n\t\n\t        }\n\t\n\t    };\n\t\n\t    /** Prepare stylesheets */\n\t    loadStyles_();\n\t\n\t    return new _codexSpecial();\n\t\n\t})();\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Dictionary object\n\t */\n\t\n\tmodule.exports = {\n\t\n\t    ru : {\n\t        increaseSize : 'Увеличить размер',\n\t        decreaseSize : 'Уменьшить размер',\n\t    },\n\t\n\t    en : {\n\t        increaseSize : 'Increase size',\n\t        decreaseSize : 'Decrease size',\n\t    },\n\t\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Classnames for elements and states\n\t */\n\t\n\tmodule.exports = {\n\t\n\t    colorSwitchers : {\n\t        blue     : 'special-blue',\n\t        green    : 'special-green',\n\t        white    : 'special-white',\n\t    },\n\t\n\t    textSizeIncreased : 'special-big',\n\t\n\t    toolbar : {\n\t\n\t        elem : 'codex-special__toolbar',\n\t\n\t        state : {\n\t            included : 'codex-special__toolbar--included',\n\t            excluded : 'codex-special__toolbar--excluded',\n\t        },\n\t\n\t        position : {\n\t            top    : 'codex-special__toolbar--position-top',\n\t            bottom : 'codex-special__toolbar--position-bottom',\n\t            left   : 'codex-special__toolbar--position-left',\n\t            right  : 'codex-special__toolbar--position-right',\n\t        },\n\t\n\t    },\n\t\n\t    iconButton : {\n\t\n\t        elem : 'codex-special__toolbar-icon',\n\t\n\t    },\n\t\n\t    textButton : {\n\t\n\t        elem : 'codex-special__toolbar-text',\n\t\n\t    },\n\t\n\t    circle : {\n\t\n\t        elem : 'codex-special__circle',\n\t\n\t        prefix : 'codex-special__circle--',\n\t\n\t        state : {\n\t            enabled  : 'codex-special__circle--enabled',\n\t            disabled : 'codex-special__circle--disabled',\n\t        },\n\t\n\t    },\n\t\n\t    body : {\n\t\n\t        excludeModificator : 'codex-special--excluded',\n\t\n\t    },\n\t\n\t};\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// codex-special.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2f4cac4f209c46ab008b","/**\n * Special contrast verison for websites\n *\n * @link https://github.com/codex-team/codex.special\n * @author Codex Team — ifmo.su\n *   Vitaly Guryn    https://github.com/talyguryn\n *   Savchenko Petr  https://github.com/neSpecc\n * @version 1.2.1\n */\n\n/** Styles */\nrequire('../css/main.css');\n\n/** Script */\nmodule.exports = require('./codex-special');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/main.js\n// module id = 0\n// module chunks = 0","module.exports = (function () {\n\n    /**\n     * Multilanguage support\n     * @private\n     */\n    var DICT = require('./dictionary');\n\n    /**\n     * CSS classes config\n     * @private\n     */\n    var classes = require('./classes');\n\n    /**\n     * Texts from dictionary\n     * @private\n     */\n    var texts = null;\n\n    /**\n     * Static nodes\n     * @private\n     */\n    var nodes = {\n\n        toolbar          : null,\n        colorSwitchers   : [],\n        textSizeSwitcher : null,\n\n    };\n\n    /**\n     * Required stylesheets URL\n     * @private\n     */\n    var CSS_FILE_PATH = 'codex-special.min.css';\n    var JS_FILE_PART_OF_NAME_TO_GET_RELATIVE_PATH = 'codex-special.min.js';\n\n    /**\n     * Names for states saved in localStorage\n     * @private\n     */\n    var localStorageBadges = {\n\n        textSise : 'codex-special__text-size',\n        color    : 'codex-special__color',\n\n    };\n\n    /**\n     * Settings for codexSpecial block\n     *\n     * blockId — at the end of which block you want to place codexSpecial\n     * scriptLocation — path to codexSpecial styles file\n     * lang — language for the codexSpecial from DICT_\n     */\n    var initialSettings = {\n\n        blockId  : null,\n        lang     : 'ru',\n        position : 'top-right',\n\n    };\n\n    /**\n     * Public methods and properties\n     * @constructor\n     */\n    var _codexSpecial = function () {};\n\n    /**\n     * Public initialization method\n     * @param {Object} settings are\n     *       - blockId - if passed, toolbar will be appended to this block\n     *                   otherwise, it will be fixed in window\n     */\n    _codexSpecial.prototype.init = function (settings) {\n\n        /** 1. Save initial settings to the private property */\n        fillSettings_(settings);\n\n        /** 2. Make interface */\n        makeUI_();\n\n        /** 3. Add listeners */\n        addListeners_();\n\n        /** 4. Check localStorage for settings */\n        loadSettings_();\n\n    };\n\n\n    /**\n     * Fills initialSettings\n     * @private\n     */\n    function fillSettings_(settings) {\n\n        for (var param in settings) {\n\n            initialSettings[param] = settings[param];\n\n        }\n\n    }\n\n    /**\n     * Gets codex-special path\n     * @private\n     */\n    function getScriptLocation() {\n\n        var scriptsList = document.getElementsByTagName('script'),\n            scriptSrc,\n            scriptDir,\n            lastSlashPosition;\n\n        for (var i = 0; i < scriptsList.length; i++) {\n\n            scriptSrc = scriptsList[i].src;\n\n            if (scriptSrc.indexOf(JS_FILE_PART_OF_NAME_TO_GET_RELATIVE_PATH) != -1) {\n\n                lastSlashPosition = scriptSrc.lastIndexOf('/');\n\n                scriptDir = scriptSrc.substr(0, lastSlashPosition + 1);\n\n                return scriptDir;\n\n            }\n\n        }\n\n    }\n\n    /**\n     * Loads requiered stylesheet\n     * @private\n     */\n    function loadStyles_() {\n\n        var pathToExtension = getScriptLocation(),\n            style = document.createElement('LINK');\n\n        style.setAttribute('type', 'text/css');\n        style.setAttribute('rel', 'stylesheet');\n\n        style.href = pathToExtension + CSS_FILE_PATH;\n\n        document.head.appendChild(style);\n\n    };\n\n    /**\n     * Interface maker\n     * @private\n     */\n    function makeUI_() {\n\n        /** 0. Init dictionary */\n        texts = DICT[initialSettings.lang];\n\n        /** 1. Make Toolbar and Switchers */\n        var toolbar          = draw_.toolbar(),\n            textSizeSwitcher = draw_.textSizeSwitcher();\n\n        /** 2. Append text size switcher */\n        toolbar.appendChild(textSizeSwitcher);\n\n        /** 3. Append color switchers */\n        for (var color in classes.colorSwitchers) {\n\n            var circle = draw_.colorSwitcher(color);\n\n            circle.dataset.style = color;\n\n            toolbar.appendChild(circle);\n\n            nodes.colorSwitchers.push(circle);\n\n        }\n\n        nodes.toolbar = toolbar;\n        nodes.textSizeSwitcher = textSizeSwitcher;\n\n        appendPanel_();\n\n    }\n\n    /**\n     * Toolbar positioning method\n     * @private\n     */\n    function appendPanel_() {\n\n        if (initialSettings.blockId) {\n\n            var blockHolder = document.getElementById(initialSettings.blockId);\n\n            if (blockHolder) {\n\n                blockHolder.appendChild(nodes.toolbar);\n\n                nodes.toolbar.classList.add(classes.toolbar.state.included);\n\n                return;\n\n            }\n\n            initialSettings.blockId = '';\n\n        }\n\n        document.body.classList.add(classes.body.excludeModificator);\n        nodes.toolbar.classList.add(classes.toolbar.state.excluded);\n\n        if (initialSettings.position) {\n\n            switch (initialSettings.position) {\n\n                case 'top-left':\n                    nodes.toolbar.classList.add(\n                        classes.toolbar.position.top,\n                        classes.toolbar.position.left\n                    ); break;\n\n                case 'bottom-right':\n                    nodes.toolbar.classList.add(\n                        classes.toolbar.position.bottom,\n                        classes.toolbar.position.right\n                    ); break;\n\n                case 'bottom-left':\n                    nodes.toolbar.classList.add(\n                        classes.toolbar.position.bottom,\n                        classes.toolbar.position.left\n                    ); break;\n\n                // 'top-right'\n                default:\n                    nodes.toolbar.classList.add(\n                        classes.toolbar.position.top,\n                        classes.toolbar.position.right\n                    ); break;\n\n            }\n\n        }\n\n        document.body.appendChild(nodes.toolbar);\n\n    }\n\n    /**\n     * Add click listeners to text and circles\n     * @private\n     */\n    function addListeners_() {\n\n        nodes.colorSwitchers.map(function (switcher, index) {\n\n            switcher.addEventListener('click', changeColor_, false);\n\n        });\n\n        nodes.textSizeSwitcher.addEventListener('click', changeTextSize_, false);\n\n    }\n\n    /**\n     * Get special setting params from localStorage and enable it\n     * @private\n     */\n    function loadSettings_() {\n\n        var color    = window.localStorage.getItem(localStorageBadges.color),\n            textSize = window.localStorage.getItem(localStorageBadges.textSize),\n            textSizeSwitcher;\n\n        if (color) {\n\n            nodes.colorSwitchers.map(function (switcher, index) {\n\n                if (switcher.dataset.style == color) {\n\n                    changeColor_.call(switcher);\n\n                }\n\n            });\n\n        }\n\n        if (textSize) {\n\n            textSizeSwitcher = nodes.textSizeSwitcher;\n\n            changeTextSize_.call(textSizeSwitcher);\n\n        }\n\n    }\n\n    /**\n     * Set special color scheme\n     * @private\n     */\n    function changeColor_() {\n\n        if (this.classList.contains(classes.circle.state.enabled)) {\n\n            return dropColor_();\n\n        }\n\n        dropColor_();\n\n        nodes.colorSwitchers.map(function (switcher, index) {\n\n            switcher.classList.add(classes.circle.state.disabled);\n\n        });\n\n        this.classList.remove(classes.circle.state.disabled);\n\n        this.classList.add(classes.circle.state.enabled);\n\n        window.localStorage.setItem(localStorageBadges.color, this.dataset.style);\n\n        document.body.classList.add(classes.colorSwitchers[this.dataset.style]);\n\n    }\n\n    /**\n     * Drop special color scheme\n     * @private\n     */\n    function dropColor_() {\n\n        for (var color in classes.colorSwitchers) {\n\n            document.body.classList.remove(classes.colorSwitchers[color]);\n\n        }\n\n        nodes.colorSwitchers.map(function (switcher, index) {\n\n            switcher.classList.remove(classes.circle.state.disabled, classes.circle.state.enabled);\n\n        });\n\n        window.localStorage.removeItem(localStorageBadges.color);\n\n    }\n\n    /**\n     * Set increased text size\n     * @private\n     */\n    function changeTextSize_() {\n\n        if (document.body.classList.contains(classes.textSizeIncreased)) {\n\n            return dropTextSize_();\n\n        }\n\n        dropTextSize_();\n\n        nodes.textSizeSwitcher.innerHTML = '<i class=\"' + classes.iconButton.elem + '\"></i> ' + texts.decreaseSize;\n\n        window.localStorage.setItem(localStorageBadges.textSize, 'big');\n\n        document.body.classList.add(classes.textSizeIncreased);\n\n    }\n\n    /**\n     * Drop increased text size\n     * @private\n     */\n    function dropTextSize_() {\n\n        document.body.classList.remove(classes.textSizeIncreased);\n\n        nodes.textSizeSwitcher.innerHTML = '<i class=\"' + classes.iconButton.elem + '\"></i> ' + texts.increaseSize;\n\n        window.localStorage.removeItem(localStorageBadges.textSize);\n\n    }\n\n    /**\n     * HTML elements maker\n     * @private\n     */\n    var draw_ = {\n\n        element : function (newElement, newClass) {\n\n            var block = document.createElement(newElement);\n\n            block.classList.add(newClass);\n\n            return block;\n\n        },\n\n        /**\n         * Codex special toolbar\n         */\n        toolbar : function () {\n\n            return draw_.element('DIV', classes.toolbar.elem);\n\n        },\n\n        /**\n         * Makes color switcher\n         * @param {string} type  - color string identifier\n         */\n        colorSwitcher : function (type) {\n\n            var colorSwitcher = draw_.element('SPAN', classes.circle.elem);\n\n            colorSwitcher.classList.add(classes.circle.prefix + type);\n\n            return colorSwitcher;\n\n        },\n\n        /**\n         * Makes text size toggler\n         */\n        textSizeSwitcher : function () {\n\n            var textToggler = draw_.element('SPAN', classes.textButton.elem);\n\n            textToggler.innerHTML = '<i class=\"' + classes.iconButton.elem + '\"></i> ' + texts.increaseSize;\n\n            return textToggler;\n\n        }\n\n    };\n\n    /** Prepare stylesheets */\n    loadStyles_();\n\n    return new _codexSpecial();\n\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/codex-special.js\n// module id = 3\n// module chunks = 0","/**\n * Dictionary object\n */\n\nmodule.exports = {\n\n    ru : {\n        increaseSize : 'Увеличить размер',\n        decreaseSize : 'Уменьшить размер',\n    },\n\n    en : {\n        increaseSize : 'Increase size',\n        decreaseSize : 'Decrease size',\n    },\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/dictionary.js\n// module id = 4\n// module chunks = 0","/**\n * Classnames for elements and states\n */\n\nmodule.exports = {\n\n    colorSwitchers : {\n        blue     : 'special-blue',\n        green    : 'special-green',\n        white    : 'special-white',\n    },\n\n    textSizeIncreased : 'special-big',\n\n    toolbar : {\n\n        elem : 'codex-special__toolbar',\n\n        state : {\n            included : 'codex-special__toolbar--included',\n            excluded : 'codex-special__toolbar--excluded',\n        },\n\n        position : {\n            top    : 'codex-special__toolbar--position-top',\n            bottom : 'codex-special__toolbar--position-bottom',\n            left   : 'codex-special__toolbar--position-left',\n            right  : 'codex-special__toolbar--position-right',\n        },\n\n    },\n\n    iconButton : {\n\n        elem : 'codex-special__toolbar-icon',\n\n    },\n\n    textButton : {\n\n        elem : 'codex-special__toolbar-text',\n\n    },\n\n    circle : {\n\n        elem : 'codex-special__circle',\n\n        prefix : 'codex-special__circle--',\n\n        state : {\n            enabled  : 'codex-special__circle--enabled',\n            disabled : 'codex-special__circle--disabled',\n        },\n\n    },\n\n    body : {\n\n        excludeModificator : 'codex-special--excluded',\n\n    },\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/classes.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}